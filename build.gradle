plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.study'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	//testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

// sockjs
	implementation 'org.webjars:sockjs-client:1.5.1'
// stomp
	implementation 'org.webjars:stomp-websocket:2.3.4'
// gson
	implementation 'com.google.code.gson:gson:2.9.0'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	// H2
	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
